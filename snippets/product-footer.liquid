      <div class="add-favorite">
        {% if customer %} 
          {% assign value = product.id %}
          {% capture product_id %}{{ product.id }}{% endcapture %}
          {% for tag in customer.tags %}
            {% capture tag_id %}{{ tag }}{% endcapture %}
            {% if tag_id contains product_id %}
              {% capture value %}x{{ tag_id }}{% endcapture %}
            {% endif %}
            {% assign size = value | size %}
            {% if size == 0 %}{% assign value = product_id %}{% endif %}
          {% endfor %}
        
          {% unless size == 0 %}
            {% assign product_id_size = product_id | size %}
            {% assign value_size = value | size %}
        
            {% assign difference_one = value_size | minus: product_id_size %}
            {% assign difference = difference_one | money_without_currency | times: 100 %}
            {% capture difference_check %}{{ difference | divided_by: 2 }}{% endcapture %}
            {% assign check = difference_check | split: '.' %}
        
            {% if check[1] contains "5" %}{% assign display = "false" %}{% else %}{% assign display = "true" %}{% endif %}
          {% endunless %}

          {% if display == "false" %}
            <a href="#" class="favorites-link added">add to favorites</a><span class="notice">added!</span>
          {% else %}
            {% form 'customer' %}
              <input type="hidden" id="contact_email" name="contact[email]" value="{{ customer.email }}"/>
              <input type="hidden" name="contact[tags]" id="contact_tags" value="{{ value }}" />
              <input type='submit' value="add to favorites" class="favorites-link" />
              <div class="tooltip">
                add to favorites
              </div>
            {% endform %}
          {% endif %}
        {% else %}
          <a href="#" onclick="return false;" class="favorites-link off">add to favorites</a>
          <div class="tip"><a href="/account/login">Sign in</a> or <a href="/account/register">create an account</a> to save favorites</div>
        {% endif %}
      </div><!-- /.add-favorite -->
    </div>
  </div> <!-- /.product_body -->
  
  {% if collection and collection.products.size > 1 %}
  
    <div id="content-table" class="related">
      <div class="wrapper">
        <h2>OTHER PRODUCTS YOU'LL LOVE</h2>
      <div id="carousel">
        {% assign thisproduct = product.handle %}
            {% for product in collection.products %}
            {% unless product.handle == thisproduct %}
            {% include 'product-slide-small' %}
            {% endunless %}
            {% endfor %}
      </div><!-- carousel -->
       
      </div><!-- wrapper -->
    </div>
      {% endif %}
 </div> <!-- /#product -->


<script type="text/javascript">

// <![CDATA[  
var selectCallback = function(variant, selector) {
  if (variant && variant.available == true) {
    // selected a valid variant
    jQuery('#add-to-cart').removeClass('disabled').removeAttr('disabled').val('ADD TO BAG'); // remove unavailable class from add-to-cart button, and re-enable button
    if(variant.price < variant.compare_at_price){
      jQuery('#price-preview').html(Shopify.formatMoney(variant.price, "{{shop.money_format}}") + " <span>was " + Shopify.formatMoney(variant.compare_at_price, "{{shop.money_format}}") + "</span>");
    } else {
      jQuery('#price-preview').html(Shopify.formatMoney(variant.price, "{{shop.money_format}}"));
    }

  } else {
    // variant doesn't exist
    var message = variant ? "Sold Out" : "Unavailable";    
    jQuery('#add-to-cart').addClass('disabled').attr('disabled', 'disabled').val('Sold Out');      // set add-to-cart button to unavailable class and disable button
    jQuery('#product .variants .price').text(message); // update price-field message
  }
};

function remove(s, t) {
  /*
  **  Remove all occurrences of a token in a string
  **    s  string to be processed
  **    t  token to be removed
  **  returns new string
  */
  i = s.indexOf(t);
  r = "";
  if (i == -1) return s;
  r += s.substring(0,i) + remove(s.substring(i + t.length), t);
  return r;
}

// initialize multi selector for product
jQuery(function() {

  jQuery('.favorites-link.off').click(function(){
    jQuery('.tip').toggle();
  });
  
  if(jQuery.cookie("viewed-products") != null){ // if cookie exists...
    var products = jQuery.cookie("viewed-products");
    var productHandles = products.split(" ");
    var matches = 0;
    var limit = 4;
    for(var i = (productHandles.length - 1); i >= 0; i--) {
      if(productHandles[i] != "{{ product.handle }}" && productHandles[i] != "" && (matches < limit)){
        Shopify.getProduct(productHandles[i]);
        matches++;
      }
    }

    if(products.indexOf("{{ product.handle }}") == -1){ // add current product to list if it isn't already there
    products += " {{ product.handle }}";
    jQuery.cookie("viewed-products", products, {path: "/"});
    } else { // if it is already there, push it to the end of the string
      var newstring = remove(products, '{{ product.handle }}');
      newstring += " {{ product.handle }}";
      jQuery.cookie("viewed-products", newstring.replace(/ /g,' '), {path: "/"});
    }
    } else { // create cookie if it doesn't already exist
    jQuery.cookie("viewed-products", "{{ product.handle }}", {path: "/"});
  }
  
  {% if product.variants.size > 1 or product.options.size > 1 %}
  new Shopify.OptionSelectors("product-select", { product: {{ product | json }}, onVariantSelected: selectCallback });
  
    {% assign found_one_in_stock = false %}
    {% for variant in product.variants %}
      {% if variant.available and found_one_in_stock == false %}
        {% assign found_one_in_stock = true %}
        {% for option in product.options %}
          jQuery('#product-select-option-' + {{ forloop.index0 }}).val({{ variant.options[forloop.index0] | json }}).trigger('change').selectbox({});
        {% endfor %}
      {% endif %}
    {% endfor %}
    
  {% endif %}
});
// ]]>
</script>